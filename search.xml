<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>SolveigMM Video Splitter 教程</title>
      <link href="/2018/09/04/svs/"/>
      <url>/2018/09/04/svs/</url>
      <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="请输入密码" />    <label for="pass">请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      <categories>
          
          <category> Info </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Daily </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>西语学习日记</title>
      <link href="/2018/09/04/%E5%8F%91%E9%9F%B3/"/>
      <url>/2018/09/04/%E5%8F%91%E9%9F%B3/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>根据&lt;现代西班牙语&gt;课本学习</p></blockquote><a id="more"></a><h2 id="发音"><a href="#发音" class="headerlink" title="发音"></a>发音</h2><p>d：1. <code>d</code>在<strong>停顿后的词语首或词内 </strong> 和 <strong>词组内</strong>的 <code>n,l</code>后面(如 <code>anda, soladado, un dedo</code>)发[d]. 其他情况发 [ð].</p><pre><code>2. d 在线绝对末尾时,发弱化[ð].</code></pre><p>b,v: 当<code>b,v</code>出现在<strong>停顿的词首</strong>, 或出现<strong>在<code>m,n</code>的后面</strong>发[b].其他情况发[β]</p><h4 id="二重元音"><a href="#二重元音" class="headerlink" title="二重元音"></a>二重元音</h4><p>西班牙语中的五个元音中有三个重元音<code>a,e,o</code>和两个弱元音<code>i, u</code> 二重元音由一个强元音加一个弱元音或两个弱元音构成<code>ia,ie,ue</code></p><h4 id="重音"><a href="#重音" class="headerlink" title="重音"></a>重音</h4><p>重音在西班牙语中非常重要. 音素完全相同的单词可以因为重音不同而改变语义,如papa(土豆)和papá(爸爸); tómate(你喝吧),和tomate(西红柿)<br><strong>重音规则</strong></p><ol><li>以元音结尾的词,重音落在倒数第二个音节上:<strong>P</strong>epe</li><li>带重音符号的音节即为重读音节:pa<strong>pá</strong></li><li></li></ol>]]></content>
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 西语 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>秘鲁旅行计划</title>
      <link href="/2018/08/11/peru/"/>
      <url>/2018/08/11/peru/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>Peru! </p></blockquote><a id="more"></a><p><strong>线路设计:</strong>：</p><blockquote><p>利马（Lima）——库斯科（Cusco）——热水镇（AguasCalientes）——马丘比丘（MachuPicchu）—— 库斯科 ——— 普诺(选择)</p></blockquote><p><strong>计划:</strong></p><blockquote><pre><code>从Lima到Cusco (早上到达 在库斯科停留一天) 从Cusco到热水镇(中午到达 在热水镇停留一天)从热水镇前往MP(早上出发 下午在热水镇留一天)从MP到Cusco(早上出发 下午到到达 )</code></pre></blockquote><p><strong>详情:</strong></p><blockquote><p>  D1:<br>   <strong>注:</strong>早上到达,买第二天到热水镇车票,MP门票.<br>   <strong>游览路线:</strong> 武器广场 -&gt; 大教堂（Catedral del Cuzco) -&gt; Plaza Regocijoo广场 -&gt; 历  史博物馆(Museo de Historia Regional）-&gt; （Plaza San Francisco）-&gt; 教堂(Museo y Catacumbas del Convento de San Francisco de Asis de Cusco) -&gt; 圣佩德罗市场（Plazoleta San Pedro) -&gt; 法院（Palacio de Justicia）-&gt; Loreto街 -&gt; 宗教艺术博物馆（Museo de Arte Religioso）-&gt; 圣布拉斯广场（Plaza San Blas）-&gt; 萨克赛瓦曼（Sacsayhuamán）。<br>   D2:<br>   早上从Cusco退房后出发热水镇,午时到达，参观一下并入住，买好前往MachuPicchu的车票<br>   D3:<br>   早上一早出发前往MP，下午回旅馆住宿<br>   D4:<br>   选择一：在热水镇巴士回Cusco，再坐大巴前往Puno<br>   选择二：Cusco回家<br>   <strong>选择Puno</strong><br>   D5 D6:<br>   Puno 两日一夜游 住Isla de Amantani   </p></blockquote><p><strong>交通:</strong></p><blockquote><h3 id="Lima到Cusco"><a href="#Lima到Cusco" class="headerlink" title="Lima到Cusco:"></a>Lima到Cusco:</h3><p>CRUZ DEL SUR公司大巴 185索尔<br><img src="/imp/peru/1.png"><br>大约22小时i</p><h3 id="Cusco到AguasCalientes"><a href="#Cusco到AguasCalientes" class="headerlink" title="Cusco到AguasCalientes:"></a>Cusco到AguasCalientes:</h3><p>火车:80美金 约3.5小时</p><h3 id="AguasCalientes到MachuPicchu"><a href="#AguasCalientes到MachuPicchu" class="headerlink" title="AguasCalientes到MachuPicchu"></a>AguasCalientes到MachuPicchu</h3><p>从温泉镇到马丘比丘只有两种方法：坐大巴或徒步。票价为单程12美元，往返23美元,首班大巴&gt; 5:20开出，之后基本上是每10分钟一趟，全程耗时20分钟</p><h3 id="Cusco到Puno"><a href="#Cusco到Puno" class="headerlink" title="Cusco到Puno:"></a>Cusco到Puno:</h3><p>火车: 140美金<br>巴士: 60索尔                     </p></blockquote>]]></content>
      
      <categories>
          
          <category> Info </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python学习笔记———网络爬虫</title>
      <link href="/2018/08/05/python1/"/>
      <url>/2018/08/05/python1/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>python </p></blockquote><a id="more"></a><p><strong>语言</strong>:Python3</p><p><strong>内容</strong>:爬取网络小说（静态网页）</p><h3 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a>网络爬虫</h3><p>爬虫就是从种子URL开始，通过 HTTP 请求获取页面内容，并从页面内容中通过各种技术手段解析出更多的 URL，递归地请求获取页面的程序网络爬虫。</p><p>引用知乎看到的<br><strong>在战略上藐视</strong>： “所有网站皆可爬”：互联网的内容都是人写出来的，而且都是偷懒写出来的（不会第一页是a，下一页是8），所以肯定有规律，这就给人有了爬取的可能，可以说，天下没有不能爬的网站“框架不变”：网站不同，但是原理都类似，大部分爬虫都是从 <strong>发送请求——获得页面——解析页面——下载内容——储存内容</strong> 这样的流程来进行，只是用的工具不同．</p><p><strong>在战术上重视</strong>： 持之以恒，戒骄戒躁：对于初学入门，不可轻易自满，以为爬了一点内容就什么都会爬了，爬虫虽然是比较简单的技术，但是往深学也是没有止境的（比如搜索引擎等）！只有不断尝试，刻苦钻研才是王道！（为何有种小学作文即视感）</p><p>（作者：知乎用户<br>链接：<a href="https://www.zhihu.com/question/20899988/answer/58388759" target="_blank" rel="noopener">https://www.zhihu.com/question/20899988/answer/58388759</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。）</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>library用法：</p><p>requests:</p><p>官方中文教程URL：<a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="noopener">http://docs.python-requests.org/zh_CN/latest/user/quickstart.html</a></p><p>BeautifulSoup:</p><p>官方中文教程URL：<a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">http://beautifulsoup.readthedocs.io/zh_CN/latest/</a></p><h3 id="1-先对小说内容进行爬取"><a href="#1-先对小说内容进行爬取" class="headerlink" title="1. 先对小说内容进行爬取"></a>1. 先对小说内容进行爬取</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">        target = &apos;http://dongyeguiwu.zuopinj.com/5530/201798.html&apos;</span><br><span class="line">        req = requests.get(url = target)  #获取response响应</span><br><span class="line">        req.encoding = &apos;utf-8&apos;</span><br><span class="line">        html = req.text  #获得html文件</span><br><span class="line">        bf = BeautifulSoup(html)</span><br><span class="line">        texts = bf.find_all(&apos;div&apos;, class_ = &apos;contentbox&apos;)</span><br><span class="line">        print(texts[0].text)</span><br></pre></td></tr></table></figure><p><strong>笔记：</strong> </p><ol><li><p><code># -*- coding:UTF-8 -*-</code><br>Python中默认的编码格式是 ASCII 格式，在没修改编码格式时无法正确打印汉字，所以在读取中文时会报错。Py3.X源码文件默认使用utf-8编码，可不添加。</p></li><li><p>req.endcoding = ‘utf-8’<br>这是字符编码问题，查看页面源代码HEAD可以看到</p></li></ol><p><code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</code></p><ol start="3"><li><p>BeautifulSoup()<br>使用BeautifulSoup解析这段代码,能够得到一个 BeautifulSoup 的对象,并能按照标准的缩进格式的结构输出.</p></li><li><p>find_all()<br>查看页面源代码可以看到</p><p><code>&lt;div id=&quot;htmlContent&quot; class = &quot;contentbox&quot;&gt;</code></p></li></ol><p>find_all匹配的返回的结果是一个列表,使用text属性，提取文本内容使用.<br>find_all() 类似的方法可以查找到想要查找的文档内容.</p><hr><p>已经可以获取网页中的小说文字。<br>下一步就是对每一个章节的URL提取。</p><hr><h3 id="2-对目录的每一章节的URL"><a href="#2-对目录的每一章节的URL" class="headerlink" title="2. 对目录的每一章节的URL"></a>2. 对目录的每一章节的URL</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"> from bs4 import BeautifulSoup</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">      targer = &apos;http://dongyeguiwu.zuopinj.com/5530/&apos;</span><br><span class="line">      req = requests.get(url = targer)</span><br><span class="line">      req.encoding = &apos;utf-8&apos;</span><br><span class="line">      html = req.text</span><br><span class="line">      div_bf = BeautifulSoup(html)</span><br><span class="line">      div = div_bf.find_all(&apos;div&apos;, class_ = &apos;book_list&apos;)</span><br><span class="line">      a_bf = BeautifulSoup(str(div[0])</span><br><span class="line">      a = a_bf.find_all(&apos;a&apos;)</span><br><span class="line">      for each in a:</span><br><span class="line">          print(each.string, each.get(&apos;href&apos;))</span><br></pre></td></tr></table></figure><p><strong>笔记：</strong></p><p>1.str() 函数将对象转化为适于人阅读的形式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s = &apos;RUNOOB&apos;</span><br><span class="line">&gt;&gt;&gt; str(s)</span><br><span class="line">&apos;RUNOOB&apos;</span><br><span class="line">&gt;&gt;&gt; dict = &#123;&apos;runoob&apos;: &apos;runoob.com&apos;, &apos;google&apos;: &apos;google.com&apos;&#125;;</span><br><span class="line">&gt;&gt;&gt; str(dict)</span><br><span class="line">&quot;&#123;&apos;google&apos;: &apos;google.com&apos;, &apos;runoob&apos;: &apos;runoob.com&apos;&#125;&quot;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p><hr><p>已经获取每一个章节链接。<br>下面是整合整个程序。</p><hr><h3 id="3-Class"><a href="#3-Class" class="headerlink" title="3.Class"></a>3.Class</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line"></span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import requests, sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class downloader:</span><br><span class="line">    def __init__(self):</span><br><span class="line">          self.target = []</span><br><span class="line">          self.title = []</span><br><span class="line">          self.urls = []</span><br><span class="line">          self.nums = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get_download_url(self):</span><br><span class="line">        req = requests.get(url = self.target)</span><br><span class="line">        req.encoding = &apos;utf-8&apos;                     #html charset值</span><br><span class="line">        html = req.text</span><br><span class="line">        div_bf = BeautifulSoup(html, &apos;lxml&apos;)</span><br><span class="line">        div = div_bf.find_all(&apos;div&apos;, class_ = &apos;book_list&apos;)</span><br><span class="line">        a_bf = BeautifulSoup(str(div[0]), &apos;lxml&apos;)</span><br><span class="line">        a = a_bf.find_all(&apos;a&apos;)</span><br><span class="line">        self.nums = len(a)</span><br><span class="line">        for each in a:</span><br><span class="line">            self.title.append(each.string)</span><br><span class="line">            self.urls.append(each.get(&apos;href&apos;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get_content(self, target_url):</span><br><span class="line">        req = requests.get(url = target_url)</span><br><span class="line">        req.encoding = &apos;utf-8&apos;</span><br><span class="line">        html = req.text</span><br><span class="line">        bf = BeautifulSoup(html, &apos;lxml&apos;)</span><br><span class="line">        word = bf.find_all(&apos;div&apos;, class_ = &apos;contentbox&apos;)</span><br><span class="line">        return word[0].text</span><br><span class="line"></span><br><span class="line">    def save_in(self, filename, title, contents):</span><br><span class="line">        with open(filename, &apos;a&apos;) as f:</span><br><span class="line">             f.write(title + &apos;\n&apos;)</span><br><span class="line">             f.writelines(contents)</span><br><span class="line">             f.write(&apos;\n\n&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">       book = downloader()</span><br><span class="line">       book.target = input(&apos;Please copy the URL: &apos;)</span><br><span class="line">       name = input(&apos;Please input the book\&apos;s name with (.txt): &apos;)</span><br><span class="line">       book.get_download_url()</span><br><span class="line">       print(&apos;Begin to download.&apos;)</span><br><span class="line">       for i in range(book.nums):</span><br><span class="line">           book.save_in(name, book.title[i], book.get_content(book.urls[i]))</span><br><span class="line">           sys.stdout.write(&quot;已下载:%.3f%%&quot; %  float(100*i/book.nums) + &apos;\r&apos;)</span><br><span class="line">           sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">       print(&apos;Download is finish.&apos;)</span><br></pre></td></tr></table></figure><p><strong>笔记：</strong></p><ol><li><p>open()</p><p>python内置函数.</p><p>python open() 函数用于打开一个文件，创建一个 file 对象，相关的方法才可以调用它进行读写。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open(name[, mode[, buffering]])</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><p>name : 一个包含了你要访问的文件名称的字符串值。</p></li><li><p>mode : mode 决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。</p></li><li><p>buffering : 如果 buffering 的值被设为 0，就不会有寄存。如果 buffering 的值取 1，访问文件时会寄存行。如果将 buffering 的值设为大于 1 的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。</p></li></ul>]]></content>
      
      <categories>
          
          <category> Info </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windscribe翻墙</title>
      <link href="/2018/08/04/windscirbe/"/>
      <url>/2018/08/04/windscirbe/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>windscribe</p></blockquote><a id="more"></a><p><a href="https://windscribe.com/" target="_blank" rel="noopener">windscribe</a><br>系统：Ubuntu18.04</p><ol><li><p>Get a Windscribe Account</p><p><a href="https://windscribe.com/myaccount" target="_blank" rel="noopener">Create a free account</a> if you don’t have one already.</p></li><li><p>Add the Windscribe signing key to apt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key FDC247B7</span><br></pre></td></tr></table></figure></li><li><p>Add the repository to your sources.list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;deb https://repo.windscribe.com/ubuntu zesty main&apos; | sudo tee /etc/apt/sources.list.d/windscribe-repo.list</span><br></pre></td></tr></table></figure></li><li><p>Run apt-get update</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>Install windscribe-cli</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install windscribe-cli</span><br></pre></td></tr></table></figure></li><li><p>Login to Windscribe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windscribe login</span><br></pre></td></tr></table></figure></li><li><p>Connect to Windscribe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windscribe connect</span><br></pre></td></tr></table></figure></li></ol><p>Need help?<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windscribe --help</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Info </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻墙 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu18.04 主题美化</title>
      <link href="/2018/08/01/ubuntu%E4%B8%BB%E9%A2%98/"/>
      <url>/2018/08/01/ubuntu%E4%B8%BB%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>刚安装完成的Ubuntu18.04进行了主题美化,算是和os系统看齐吧。</p><h2 id="安装Tweak-Tool-或者在软件中心安装"><a href="#安装Tweak-Tool-或者在软件中心安装" class="headerlink" title="安装Tweak Tool 或者在软件中心安装"></a>安装Tweak Tool 或者在软件中心安装</h2><img src="/imp/ubuntu/1.png"><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install gnome-tweak-tool</span><br></pre></td></tr></table></figure><p>打开Tweak</p><h3 id="按钮位置修改为左边"><a href="#按钮位置修改为左边" class="headerlink" title="按钮位置修改为左边"></a>按钮位置修改为左边</h3><img src="/imp/ubuntu/2.png"><h3 id="还可以调整桌面是否显示图标以及鼠标的图案"><a href="#还可以调整桌面是否显示图标以及鼠标的图案" class="headerlink" title="还可以调整桌面是否显示图标以及鼠标的图案"></a>还可以调整桌面是否显示图标以及鼠标的图案</h3><h3 id="在appearance中-shell-有个感叹号不能修改"><a href="#在appearance中-shell-有个感叹号不能修改" class="headerlink" title="在appearance中 shell 有个感叹号不能修改"></a>在appearance中 shell 有个感叹号不能修改</h3><p>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnome-shell-extensions</span><br></pre></td></tr></table></figure><p>然后重启tweak（我需要重启电脑）后，打开</p><img src="/imp/ubuntu/3.png"><p>把<strong>user themes调成on</strong>，然后就发现shel没有了感叹号.</p><hr><p>配置完成，开始安装主题</p><hr><h2 id="1-安装GTK主题"><a href="#1-安装GTK主题" class="headerlink" title="1. 安装GTK主题"></a>1. 安装GTK主题</h2><p>前往<a href="https://www.opendesktop.org/s/Gnome/p/1241688" target="_blank" rel="noopener">https://www.opendesktop.org/s/Gnome/p/1241688</a></p><img src="/imp/ubuntu/4.png"><p>选择自己喜欢的主题，然后下载。下载完解压后把得到的文件移到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/themes</span><br></pre></td></tr></table></figure></p><p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv xxxxxxxx /usr/share/themes</span><br></pre></td></tr></table></figure></p><p>完成后，打开Tweak。</p><img src="/imp/ubuntu/5.png"><p>application中选择刚刚下载的主题，如果没有，又确认移动成功，就重启tweak。</p><h2 id="2-修改图标"><a href="#2-修改图标" class="headerlink" title="2. 修改图标"></a>2. 修改图标</h2><p>前往<a href="https://www.opendesktop.org/s/Gnome/p/1102582/下载" target="_blank" rel="noopener">https://www.opendesktop.org/s/Gnome/p/1102582/下载</a><br><img src="/imp/ubuntu/6.png"></p><p>下载完成解压后移动到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/icons</span><br></pre></td></tr></table></figure></p><p>然后到Tweak中的Icons应用</p><h2 id="3-修改桌面shell"><a href="#3-修改桌面shell" class="headerlink" title="3. 修改桌面shell"></a>3. 修改桌面shell</h2><p>前往<a href="https://www.opendesktop.org/s/Gnome/p/1013741/" target="_blank" rel="noopener">https://www.opendesktop.org/s/Gnome/p/1013741/</a></p><p>下载下面截图的<br><img src="/imp/ubuntu/7.png"></p><p>返回Tweak中的Shell应用</p><h2 id="4-开机动画"><a href="#4-开机动画" class="headerlink" title="4. 开机动画"></a>4. 开机动画</h2><p>输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit /etc/alternatives/default.plymouth</span><br></pre></td></tr></table></figure></p><p>打开文件后看到<br><img src="/imp/ubuntu/8.png"></p><p>看到default.plymouth文件指定了一个logo文件夹，指定了一个执行脚本。开机的时候就用这个文件指定的logo和脚本执行。</p><p>如果没找到合适的可以选择苹果的开机画面<a href="https://www.opendesktop.org/p/1009320/" target="_blank" rel="noopener">https://www.opendesktop.org/p/1009320/</a></p><img src="/imp/ubuntu/9.png"><p>下载完成后解压</p><p>解压后的darwin里<img src="/imp/ubuntu/10.png"> 这个脚本是开机动画</p><p>整个darwin文件移到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/plymouth/themes/</span><br></pre></td></tr></table></figure><p>然后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit /etc/alternatives/default.plymouth</span><br></pre></td></tr></table></figure></p><p>并修改（建议先把源目录备份）</p><img src="/imp/ubuntu/11.png"><h2 id="5-GDM登录页面"><a href="#5-GDM登录页面" class="headerlink" title="5.GDM登录页面"></a>5.GDM登录页面</h2><p>前往<a href="https://www.opendesktop.org/s/Gnome/p/1207015/" target="_blank" rel="noopener">https://www.opendesktop.org/s/Gnome/p/1207015/</a></p><p>并下载需要密码或不需要密码<br>解压后打开readme,3步就可以更换了。</p><p>原文：<a href="https://www.cnblogs.com/feipeng8848/p/8970556.html" target="_blank" rel="noopener">https://www.cnblogs.com/feipeng8848/p/8970556.html</a></p>]]></content>
      
      <categories>
          
          <category> Info </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>话语</title>
      <link href="/2018/08/01/%E8%AF%9D%E8%AF%AD1/"/>
      <url>/2018/08/01/%E8%AF%9D%E8%AF%AD1/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>群体盲从意识会淹没个体的理性，个体一旦将自己归入该群体，其原本独立的理性就会被群体的无知疯狂所淹没。<br>                                ——古斯塔夫·勒庞 《乌合之众》 </p></blockquote><a id="more"></a>]]></content>
      
      <categories>
          
          <category> Sentence </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daily </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sun</title>
      <link href="/2018/07/01/Sun/"/>
      <url>/2018/07/01/Sun/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>Hey, big guy. Sun’ getting real low.<br>             ———Bruce&amp;Natasha</p></blockquote><a id="more"></a><figure><br>    <img src="/imp/sun/1.JPG"><br>    <img src="/imp/sun/2.JPG"><br>    <img src="/imp/sun/3.JPG"><br>    <img src="/imp/sun/4.JPG"><br>      <img src="/imp/sun/5.JPG"><br>    <img src="/imp/sun/6.JPG"><br>    <img src="/imp/sun/7.JPG"><br>    <img src="/imp/sun/8.JPG"><br>    <img src="/imp/sun/9.JPG"><br>    <img src="/imp/sun/10.JPG"><br>     <img src="/imp/sun/11.JPG"><br>     <img src="/imp/sun/12.JPG"><br>     <img src="/imp/sun/13.JPG"><br></figure> ]]></content>
      
      <categories>
          
          <category> Photo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PIC.Sun </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Amsterdam</title>
      <link href="/2018/06/29/Amsterdam/"/>
      <url>/2018/06/29/Amsterdam/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>风车里面是有住家的,木鞋真的是荷兰人天天穿的！<br>           ——丘彦明 《在荷兰过日子》</p></blockquote> <a id="more"></a><figure><br><br>   <img src="/imp/Amsterdam/2.jpg"><br>    <img src="/imp/Amsterdam/3.jpg"><br>    <img src="/imp/Amsterdam/4.jpg"><br>    <img src="/imp/Amsterdam/5.jpg"><br>    <img src="/imp/Amsterdam/6.jpg"><br>    <img src="/imp/Amsterdam/7.jpg"><br>    <img src="/imp/Amsterdam/8.jpg"><br>    <img src="/imp/Amsterdam/9.jpg"><br>    <img src="/imp/Amsterdam/10.jpg"><br>    <img src="/imp/Amsterdam/11.jpg"><br>    <img src="/imp/Amsterdam/12.jpg"><br>    <img src="/imp/Amsterdam/13.jpg"><br>    <img src="/imp/Amsterdam/14.jpg"><br>    <img src="/imp/Amsterdam/15.jpg"><br>    <img src="/imp/Amsterdam/16.jpg"><br>    <img src="/imp/Amsterdam/17.jpg"><br>    <img src="/imp/Amsterdam/18.jpg"><br>    <img src="/imp/Amsterdam/19.jpg"><br>    <img src="/imp/Amsterdam/20.jpg"><br>    <img src="/imp/Amsterdam/21.jpg"><br>    <img src="/imp/Amsterdam/22.jpg"><br>    <img src="/imp/Amsterdam/23.jpg"><br>    <img src="/imp/Amsterdam/24.jpg"><br>    <img src="/imp/Amsterdam/25.jpg"><br>    <img src="/imp/Amsterdam/26.jpg"><br>    <img src="/imp/Amsterdam/27.jpg"><br>    <img src="/imp/Amsterdam/28.jpg"><br></figure> ]]></content>
      
      <categories>
          
          <category> Photo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PIC.Amsterdam </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HEXO+GitHub 搭建我的博客</title>
      <link href="/2018/06/06/HEXO/"/>
      <url>/2018/06/06/HEXO/</url>
      <content type="html"><![CDATA[<blockquote><p><strong>身为小白的我,经过数小时的百度谷歌找文章终于搭建了我的博客，为了纪念一下~第一篇文章就分享我建立博客的过程。</strong></p></blockquote><p> <img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=462086249,1997041231&fm=27&gp=0.jpg" width="400" height="100" alt="git" align="center"><br><a id="more"></a></p><h3 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h3><p> Hexo 是基于NodeJs的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github和Heroku</p><p> 上。</p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><ul><li><p>安装git  </p><ul><li>负责上传文章。</li><li>直接下载安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">git</a>。</li></ul></li><li><p>安装node</p><ul><li>Hexo是基于Node.js开发的。</li><li>直接下载安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node</a>。</li></ul></li></ul><h3 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a>配置<a href="http://github.com" target="_blank" rel="noopener">GitHub</a></h3><p>1、注册账号后建立仓库</p><p> <strong>注：</strong>必须验证邮箱</p><p>2、 仓库名必须是<strong>用户名.github.io</strong>。</p><p>假如你的用户名是test，仓库名必须是<strong>test.github.io</strong></p><p>3、 选择主题。</p><p>4、 现在可以访问博客<strong>https//用户名.github.io </strong>。</p><h3 id="安装并配置hexo"><a href="#安装并配置hexo" class="headerlink" title="安装并配置hexo"></a>安装并配置hexo</h3><p>1、检测git和node是否安装成功，cmd中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">git --version</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>   如果得到版本信息的话就是安装成功</p><p>2、成功的就开始使用npm安装hexo</p><p>右键git bush输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>安装完成后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v&apos;</span><br></pre></td></tr></table></figure></p><p>得到版本信息为安装完成。</p><p>3、本地创建一个Hexo文件夹并进入路径并打开。</p><p>右键git bush 输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install </span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></p><p>成功后文件夹内会有以下文件<br><img src="/imp/1/1.png"></p><p>4、启动本地服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>然后打开浏览器，输入<a href="http://localhost:4000/:4000/" target="_blank" rel="noopener">http://localhost:4000/:4000/</a> 出现下图，既证明Hexo安装成功。<br><img src="/imp/1/2.png"></p><p>5、成功后开始更换hexo主题了，可以在官网和github上找找。<br>打开theme文件<br>git bush输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone **url**</span><br></pre></td></tr></table></figure></p><p><strong>注：</strong>Url为github的url。<br>克隆完成后，你会在<code>themes</code>文件夹下看到新的主题包，将这个主题包重命名。</p><p>然后打开Hexo文件夹下面的)<code>_config.yml</code>文件，修改里面的<code>theme</code>参数为重命名的文件名。<br>然后在重新启动本地服务器，输入<a href="http://localhost:4000/:4000/" target="_blank" rel="noopener">http://localhost:4000/:4000/</a> ，主题正常的话就会更改了。</p><h3 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h3><p>Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。<br>1、设置GIT的user name 和 user email。<br>    git bush 输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git  config --global user.name &quot;user name&quot;</span><br><span class="line">git config --global user.email &quot;user email&quot;</span><br></pre></td></tr></table></figure></p><p>2、查看SSH密钥</p><ul><li><p>查看是否已经有了ssh密钥：<code>cd ~/.ssh</code><br>假如没有不会有此文件.。</p></li><li><p>生成密钥：<br>$ ssh-keygen -t rsa -C “<a href="mailto:xxxx@xx.com" target="_blank" rel="noopener">xxxx@xx.com</a>”<br>按3个回车，密码为空。<br>然后就会生成<em>id_rsa</em> 和 <em>id_rsa.pub</em> ，而 <em>id_rsa</em> 是密钥，<em>id_rsa.pub</em> 就是公<br>钥，在 C://Documents andSettings/username/.ssh 下，都是隐藏文件。</p></li></ul><p>3、添加SSH到github<br>打开<em>id_rsa.pub</em>复制内容并打开<a href="http://github.com" target="_blank" rel="noopener">Github</a>设置页面<br><img src="/imp/1/3.jpg"><br>Key 那栏把 id_rsa.pub 公钥文件里的内容复制粘贴进去就可以了，Title 那栏不需要填写，添加后点击 Add SSH key 。<br>4、检测<br>git bush输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>出现以下提示为成功<br><img src="/imp/1/4.png"></p><p>###配置本地hexo</p><ul><li>打开Hexo文件夹目录下的<code>_config.yml</code>，到最下面。配置如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo: git@github.com:user_name/user_name.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></li></ul><p><strong>注：</strong>冒号后必须有空格<br>在hexo目录下git bush，并执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>在浏览器输入(<a href="http://usern_ame.github.io" target="_blank" rel="noopener">http://usern_ame.github.io</a>) 就可以访问你的博客了。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>在万网上购买你喜欢的域名然后进行解析。<br>解析前要在hexo下source文件内添加CNAME文件，并在里面你购买的域名不要加www.和https,<br><code>xxxxxxx.com</code></p><ul><li>解析<br>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下你的用户名.github.io的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向你的用户名.github.io，这样可以保证无论是否添加www都可以访问，如下：<img src="/imp/1/5.png"></li></ul><blockquote><p>我CNAME不知道为什么显示添加失败，所以就没添加了</p></blockquote><h3 id="其他参考"><a href="#其他参考" class="headerlink" title="其他参考"></a>其他参考</h3><p><a href="https://blog.csdn.net/u012195214/article/details/72454346" target="_blank" rel="noopener">基于Hexo+GitHub Page搭建免费个人博客教程</a><br><a href="https://blog.csdn.net/binyao02123202/article/details/20130891log.csdn.net/binyao02123202/article/details/20130891" target="_blank" rel="noopener">github设置添加SSH</a></p>]]></content>
      
      <categories>
          
          <category> Info </category>
          
      </categories>
      
      
        <tags>
            
            <tag> about blog </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
